<!--订单列表模块-->
<template>
<view class="order_item">
<repeat for="{{orderList}}">
  <view class="list" wx:key="index">
    <view class="item_content">
      <view class="order_list_top">
        <view class="left">
          <view class="title">订单号：
            <text class="order_doc">{{item._id}}</text>
          </view>
          <view class="title mt10">提交时间：
            <text class="order_doc">{{item.createTime}}</text>
          </view>
        </view>
        <view>
          <view class="order_state" wx:if="{{item.status==0}}">待付款</view>
          <view class="order_state" wx:if="{{item.status==1}}">已付款</view>
        </view>
    </view>
    <view class="">
      <shopItemList :list.sync="item.orderItemList"></shopItemList>
    </view>
  </view>
  <view class="order_list_footer">
    <view class="reveiveMoney c333">应付款：
      <text class="num">{{item.totalPrice}}</text>
    </view>
    <view >
      <view class="btn_group">
        <van-button plain type="danger"  wx:if="{{item.status==0}}" data-id="{{item._id}}"  bind:click="delOrder" custom-class="btn btn_del">删除订单</van-button>
        <van-button plain type="primary"  wx:if="{{item.status==0}}" data-id="{{item._id}}"  bind:click="payMoney" loading="{{paying}}" loading-text="正在支付..." custom-class="btn btn_pay">立即付款</van-button>
    </view>
  </view>
  </view>
  </view>
</repeat>
</view>
</template>
<script>
import wepy from 'wepy'
import tip from '@/utils/tip'
import ShopItemList from '@/components/shop_item_list'
import {
  SYSTEM_INFO,
  USER_SPECICAL_INFO
} from '@/utils/constant';
export default class orderItem extends wepy.component {

  props = {
    orderList: {
      default: [],
      flag:"",
      orderNo:"",
      list:[]
    }
  }

  data ={
    paying:false
  }

  async editOrderInfo(orderNo,flag) {
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};

    wx.cloud.callFunction({
    name: 'editOrder',
    data:{
        orderId: orderNo,
        flag: flag
      }
    })
    .then(res => {
       this.$emit('refreshOrderList', that.flag);
       that.$apply();
    })
    .catch(err => {
      console.log(err);
      tip.error("订单删除失败");
    })
  }
  components = {
    shopItemList: ShopItemList
  }

  events = {

  }

  methods = {
    async delOrder(e) {
      this.flag=1;
      this.orderNo = e.currentTarget.dataset.id;
      await tip.confirm('是否删除订单');
      await this.editOrderInfo(this.orderNo,this.flag);
      console.log("删除成功")
    },
    
    async payMoney(e) {
      tip.loading("提交订单中");
      let that = this;
      this.paying = true;
      this.orderNo = e.currentTarget.dataset.id;
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      let openId = userSpecialInfo.openid;
      wx.cloud.callFunction({
        name: 'pay',
        data:{
          type:'unifiedorder',
          orderId:that.orderNo,
          openid:openId
        }
      })
    .then(res => {
      console.log(res);
      const param = res.result.data;
      if(res.result.code==0){
        wx.requestPayment({
          appId: param.appid,
          timeStamp: param.time_stamp,
          nonceStr: param.nonce_str,
          package: `prepay_id=${param.prepay_id}`,
          signType: 'MD5',
          paySign: param.frontSign,
          success: function (res) {
            console.log('pay', res)
            wx.cloud.callFunction({
                name: 'pay',
                data:{
                  type:'payorder',
                  orderId:that.orderNo
                }
            })
            .then(res => {
                tip.loaded();
                wepy.redirectTo({
                  url: "/pages/pay_success?orderNo="+param.out_trade_no
                });
            })
            .catch(err=>{
              console.log(err);
              tip.loaded();
              wepy.redirectTo({
                  url: "/pages/pay_success?orderNo="+param.out_trade_no
              });
            });
          },
          fail: function (res) {
            console.log(res)
            tip.alert('支付失败');
            setTimeout(() => {
              //支付成功 关闭loadding 跳转到支付成功页面
              tip.loaded();
              wepy.redirectTo({
                url: "/pages/order"
              })
            }, 2000)
          }
        })
      } else {
        tip.alert('支付失败');
        setTimeout(() => {
          //支付成功 关闭loadding 跳转到支付成功页面
          tip.loaded();
          wepy.redirectTo({
            url: "/pages/order"
          })
        }, 2000)
      }
    });
    }
  }

  onLoad() {
    this.paying=false;
  }
}

</script>
<style lang="less">
.order_item {
  padding: 10rpx 0rpx;
  background: #f7f7f7;
  margin-bottom: 30rpx;
  .title {
    font-size: 26rpx;
    color: #333;
  }
  .order_doc {
    font-size: 26rpx;
    color: #808080;
  }
  .mt10 {
    margin-top: 10rpx;
  }
  .order_state {
    color: #ff4856;
    font-size: 32rpx;
  }
  .order_list_top {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
  }
  .order_list_footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 20rpx;
    .num {
      color: #ff4856;
    }
  }
  .order_list_top {
    padding-bottom: 26rpx;
    border-bottom: 1px solid #efefef
  }
  .list {
    background: #fff;
    padding: 30rpx;
    margin-top: 15rpx;
  }
  .btn_group {
    display: flex;
    align-items: center;
    .btn {
      font-size: 25rpx;
      text-align: center;
      margin: 0 auto;
      width: 100%;
      -moz-border-radius: 15rpx;
      /* Firefox */
      -webkit-border-radius: 15rpx;
      /* Safari 和 Chrome */
      border-radius: 15rpx;
      /* Opera 10.5+, 以及使用了IE-CSS3的IE浏览器 */
    }
    .btn_del {
      color: #333;
      border: 1px solid #ccc;
    }
    .btn_pay {
      background: #07c160;
      color: #fff;
      margin-left: 20rpx;
    }
  }
}

</style>
