<!--确认订单-->
<template>
  <view class="confirm_order">
    <view class="address" @tap="setAddress">
      <view class="empty_address" wx:if="{{!is_exit_address}}">
        <view class="title">设置收货地址</view>
        <view class="arrow">&gt;</view>
      </view>
      <view class="address_info" wx:else>
        <view class="title">
          <view class="user_info">
            <text class="name">{{address.address.receiverName}}</text>
            <text class="phone">{{address.address.mobile}}</text>
          </view>
          <view class="active_address">
            <text class="defult" wx:if="{{address.isdefault==1}}"> [默认]</text>
            {{address.address.addressDetail}}
          </view>
        </view>
        <view class="arrow">&gt;</view>
      </view>
    </view>
    <view class="spacing"></view>


<view class="goodsList">
    <!--列表显示2个，绑定数据记得去掉，这里做调试-->
<repeat for="{{list}}" key="index" index="index" item="item">
<view class="list_box">
  <swipeDelete :swipeData="item" @delItem.user="handleDelItem">
      <view class="goods-info">
        <view class="img-box">
          <image src="{{item.logo}}" class="img" />
        </view>
        <view class="text-box">
          <view class="goods-title">{{item.goodsName}}</view>
          <view class="goods-label">{{item.skuVal}}</view>
          <view class="goods-price">¥ {{item.price}}</view>
          <view class="buy-num">
            <view class="jian-btn {{item.orderNum==1? 'disabled' : ''}}" catchtap="jianBtnTap" data-index="{{index}}" data-id="{{item.goodsId}}">-</view>
            <input type="number" value="{{item.orderNum}}" disabled/>
            <view class="jia-btn " catchtap="jiaBtnTap" data-index="{{index}}" data-id="{{item.goodsId}}">+</view>
          </view>
        </view>
      </view>
  </swipeDelete>
</view>
</repeat>
</view>


    <view class="spacing"></view>
    <view class="order_info">
      <view class="block">
        <view class="left">配送方式</view>
        <view class="right">包邮</view>
      </view>
      <view class="block">
        <view class="left">买家留言:</view>
        <view class="right input_box">
          <input bindinput="bindKeyInput" placeholder="对本次交易的说明" />
        </view>
      </view>
      <view class="spacing"></view>
      <view class="block">
        <view class="left tongji">商品金额</view>
        <view><view class="right price">应付:￥{{totalPrice}}</view></view>
      </view>
    </view>
    <view class="pay_box">
        <van-button bind:click="goPay" loading="{{paying}}" loading-text="正在支付..."  custom-class="button"	type="primary">微信支付</van-button>
        <!-- <button form-type="submit" class="button type_green">微信支付</button> -->
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import tip from '@/utils/tip';
import {
  SYSTEM_INFO,
  USER_SPECICAL_INFO,
  ADDRESS_ID,
  CURRENT_GOODS_INFO
} from '@/utils/constant';
import swipeDelete from '@/components/common/wepy-swipe-delete'
export default class ComfireOrder extends wepy.page {
  config = {
    navigationBarTitleText: '确认订单',
  }
  components = {
    swipeDelete
  }

  data = {
    list: [],
    goodsId: "",
    //卖家留言
    sellerMessage: "",

    //是否存在默认地址
    is_exit_address: false,
    address: {},
    //总价
    totalPrice:0,
    actualPrice : 0,
    purchaseType : 1,
    operating: false,
    paying:false
  }

  //获取订单详情
  async getOrderDetailInfo(useDefault,isCart=false) {
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let openId = userSpecialInfo.openid;
    if(!isCart){
      wx.cloud.callFunction({
      name: 'getOrderDetailInfo',
      data:{
        openId:openId,
        goodsId:this.goodsId,
        skuVal:this.goodsSkuVal,
        isCart:isCart
      }
    })
    .then(order => {
      let res = order.result;
      that.list = res.data;
      that.totalPrice = res.data[0].totalPrice;
      that.actualPrice = that.totalPrice;
      if(!useDefault){
        
      }else{
        that.is_exit_address = res.hasDefaultAddress;
        that.address = res.defaultAddress;
      }
      that.$apply();
    })
    .catch(err=>{
      console.log(err);
      tip.error("获取订单错误");
    })

    }else {
      wx.cloud.callFunction({
      name: 'getOrderDetailInfo',
      data:{
        openId:openId,
        isCart:isCart
      }
    })
    .then(order => {
      console.log(order);
      let res = order.result;
      that.list = res.data;
      this.totalPrice = 0;
      this.list.forEach(value=>{
          if(value.isChecked){
            this.totalPrice += value.totalPrice
          }
      });
      that.actualPrice = that.totalPrice;
      if(!useDefault){
        
      }else{
        that.is_exit_address = res.hasDefaultAddress;
        that.address = res.defaultAddress;
      }
      that.$apply();
    })
    .catch(err=>{
      console.log(err);
      tip.error("获取订单错误");
    })

    }
    
  }

  async getAddressInfo(id) {
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    wx.cloud.callFunction({
      name: 'getAddressInfo',
      data:{
        id:id
      }
    })
    .then(res => {
      console.log(res)
      if(res.result.data.length!==0){
        this.is_exit_address = true;
        this.address = res.result.data[0];
      }
    })
    .catch(err => {
      console.log(err);
      tip.error("获取地址错误");
    })
  }

  onLoad(option) {
    let that = this;
    this.actualPrice = 0;
    this.totalPrice = 0;
    this.operating = false;
    let from = option.from==undefined?"":option.from;
    let useDefault = true;
    this.paying=false;
    if (from=="selAdd") {
      useDefault = false;
      that.getAddressInfo(wepy.getStorageSync(ADDRESS_ID));
      let goodsInfo = wepy.getStorageSync(CURRENT_GOODS_INFO);
      this.goodsId = goodsInfo.goodsId;
      this.goodsSkuVal = goodsInfo.goodsSkuVal;
    }else {
      this.goodsId = option.goodsId==undefined?"":option.goodsId;
      this.goodsSkuVal = option.goodsSkuVal==undefined?"":option.goodsSkuVal;
    }
    if(from=="cart"){
      that.getOrderDetailInfo(useDefault,true);
    }else{
      that.getOrderDetailInfo(useDefault);
    }
  }
  computed = {

  }

  async goToPay() {
    //测试调用接口用，可注释
    tip.loading("提交订单中");
    this.paying = true;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let openId = userSpecialInfo.openid;
    let orderId='';
    wx.cloud.callFunction({
    name: 'createOrder',
    data:{
         openId:openId,
         list:this.list,
         totalPrice: this.totalPrice,
         status:0,
         address:this.address
      }
    })
    .then(res =>{
      if(res.result.errMsg == "collection.add:ok"){
        console.log(res.result._id);
        orderId = res.result._id;
        let cartIds = []; 
        this.list.forEach(val=>{
          cartIds.push(val._id);
        });
        return wx.cloud.callFunction({
          name: 'deleteCartGoods',
          data:{
            openId:openId,
            ids:cartIds
          }
        });
      }
    })
    .then(()=>{
      return wx.cloud.callFunction({
        name: 'pay',
        data:{
          type:'unifiedorder',
          orderId,
          openid:openId
        }
      });
    })
    .then(res => {
      console.log(res);
      const param = res.result.data;
      if(res.result.code==0){
        wx.requestPayment({
          appId: param.appid,
          timeStamp: param.time_stamp,
          nonceStr: param.nonce_str,
          package: `prepay_id=${param.prepay_id}`,
          signType: 'MD5',
          paySign: param.frontSign,
          success: function (res) {
            console.log('pay', res)
            wx.cloud.callFunction({
                name: 'pay',
                data:{
                  type:'payorder',
                  orderId
                }
            })
            .then(res => {
                tip.loaded();
                wepy.redirectTo({
                  url: "/pages/pay_success?orderNo="+param.out_trade_no
                });
            })
            .catch(err=>{
              console.log(err);
              tip.loaded();
              wepy.redirectTo({
                  url: "/pages/pay_success?orderNo="+param.out_trade_no
              });
            });
          },
          fail: function (res) {
            console.log(res)
            tip.alert('支付失败');
            setTimeout(() => {
              //支付成功 关闭loadding 跳转到支付成功页面
              tip.loaded();
              wepy.redirectTo({
                url: "/pages/order"
              })
            }, 2000)
          }
        })
      } else {
        tip.alert('支付失败');
        setTimeout(() => {
          //支付成功 关闭loadding 跳转到支付成功页面
          tip.loaded();
          wepy.redirectTo({
            url: "/pages/order"
          })
        }, 2000)
      }
    });
  }

  async updateGoodNum(id, num, skuVal, index) {
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let openId = userSpecialInfo.openid;
    wx.cloud.callFunction({
      name: 'cartUpdateNum',
      data:{
         openId:openId,
         goodsId:id,
         skuVal:skuVal,
         orderNum: num
      }
    })
    .then(order => {
      let res = order.result;
      this.list = res.data;
      this.totalPrice = res.data[0].totalPrice;
      this.actualPrice = this.totalPrice;
      this.operating = false;
      this.$apply();
    })
    .catch(err => {
      console.log(err);
      tip.error("更新数量失败");
    })
  }

  async deleteGoods(itemData) {
      var id = itemData._id;
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      let openId = userSpecialInfo.openid;
      wx.cloud.callFunction({
      name: 'deleteCartGoods',
      data:{
         openId:openId,
         ids:[id]
        }
      })
      .then(res => {
        let retList = [];
        for (var i = 0; i < this.list.length; i++) {
          if (this.list[i]._id == id) {
            if (this.list[i].isChecked) {
              console.log(this.list)
              this.totalPrice = parseFloat(this.totalPrice - this.list[i].totalPrice);
            }
            continue;
          } else {
            retList.push(this.list[i]);
          }
        }
        this.list = retList;
        this.$apply();
      })
      .catch(err => {
        conole.log(err);
        tip.error("删除失败");
      })
  
    }


  methods = {
    handleDelItem(itemData) {
      this.deleteGoods(itemData);
    },
    bindKeyInput(e) {
      this.sellerMessage = e.detail.value;
    },
    async goPay(e) {
      if (!this.is_exit_address) {
        await tip.confirm('你未设置收货地址，请设置地址');
        wepy.navigateTo({
          url: `/pages/address?type=order`
        })
        return false;
      }
      this.goToPay();
    },
    setAddress() {
      wepy.setStorageSync(CURRENT_GOODS_INFO,{
        goodsId: this.goodsId,
        goodsSkuVal: this.goodsSkuVal
      })
      wepy.redirectTo({
         url: `/pages/address?type=order`})
    },
    jianBtnTap(e) {
      if (this.operating) {
        return;
      }
      this.operating = true;
      var index = parseInt(e.currentTarget.dataset.index);
      var id =  e.currentTarget.dataset.id;
      var num = this.list[index].orderNum;
      let skuVal = this.list[index].skuVal;
      // 如果只有1件了，就不允许再减了
      if (num > 1) {
        num --;
      } else {
        return;
      }
  
      this.updateGoodNum(id, num, skuVal, index);
    },
    jiaBtnTap(e) {
      if (this.operating) {
        return;
      }
      this.operating = true;
      var index = parseInt(e.currentTarget.dataset.index);
      var num = this.list[index].num;
      var id =  e.currentTarget.dataset.id;
      var num = this.list[index].orderNum;
      let skuVal = this.list[index].skuVal;
      // 自增
      num ++;
      this.updateGoodNum(id, num, skuVal, index);
    }
  }
  events = {

  }
}

</script>
<style lang="less">
.address {
  border-top: 1px solid #efefef;
  background: #fff;
  .empty_address,
  .address_info {
    display: flex;
    justify-content: space-between;
    height: 103rpx;
    align-items: center;
    padding: 0rpx 35rpx;
    .title {
      color: #000;
    }
    .arrow {
      color: #9a9a9a;
    }
    .user_info {
      color: #1a1a1a;
    }
    .active_address {
      margin-top: 20rpx;
    }
    .defult {
      color: #ea4a3a;
    }
  }
  .address_info {
    height: 150rpx;
  }
}

.order_info {
  .block {
    display: flex;
    justify-content: space-between;
    height: 91rpx;
    align-items: center;
    padding: 0rpx 35rpx;
    border-bottom: 1px solid #efefef;
    background: #fff;
    .txt {
      font-size: 32rpx;
    }
    .left {
      color: #000;
    }
    .right {
      color: #9a9a9a;
      text-align: right;
    }
    .price {
      color: #ea4a3a;
      font-size: 32rpx;
    }
    .tongji {
      font-size: 32rpx;
    }
    .input_box {
      flex: 1;
      margin-left: 20rpx;
    }
    .total_jf{
      font-size: 32rpx;
    }
  }
}
.list_box {
  height: 250rpx;
}

.goods-info {
  border-bottom: 1px solid #eee;
  display: flex;
  padding: 20rpx;
  box-sizing: border-box;
  position: relative;
  background: #fff;
}

.goods-info .img-box {
  width: 160rpx;
  height: 160rpx;
  overflow: hidden;
  margin-right: 28rpx;
  background-color: #d8d8d8;
}

.goods-info .text-box {
  width: 480rpx;
}

.goods-info .text-box .goods-title {
  font-size: 32rpx;
  color: #414141;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  padding: 10rpx 20rpx 5rpx 0;
}

.goods-info .text-box .goods-label {
  font-size: 26rpx;
  color: #999;
  height: 38rpx;
  line-height: 38rpx;
  margin: 8rpx 0 25rpx 0;
}

.goods-info .text-box .goods-price {
  font-size: 34rpx;
  color: #e64340;
}

.goods-info .text-box .buy-num {
  width: 164rpx;
  height: 48rpx;
  line-height: 48rpx;
  position: absolute;
  right: 30rpx;
  bottom: 30rpx;
  display: flex;
  font-size: 24rpx;
  text-align: center
}

.goods-info .text-box .buy-num .jian-btn {
  width: 48rpx;
  height: 100%;
  border-left: 1rpx solid #ccc;
  border-bottom: 1rpx solid #ccc;
  border-top: 1rpx solid #ccc;
  border-bottom-left-radius: 6rpx;
  border-top-left-radius: 6rpx;
}

.goods-info .text-box .buy-num .jian-btn.disabled {
  background-color: #f5f5f9;
  border-left: 1rpx solid #eee;
  border-bottom: 1rpx solid #eee;
  border-top: 1rpx solid #eee;
  color: #ccc;
}

.goods-info .text-box .buy-num .jia-btn {
  width: 48rpx;
  height: 100%;
  border-right: 1rpx solid #ccc;
  border-bottom: 1rpx solid #ccc;
  border-top: 1rpx solid #ccc;
  border-bottom-right-radius: 6rpx;
  border-top-right-radius: 6rpx;
}

.goods-info .text-box .buy-num .jia-btn.disabled {
  background-color: #f5f5f9;
  border-right: 1rpx solid #eee;
  border-bottom: 1rpx solid #eee;
  border-top: 1rpx solid #eee;
  color: #ccc;
}

.goods-info .text-box .buy-num input {
  width: 68rpx;
  height: 48rpx;
  min-height: 48rpx;
  text-align: center;
  font-size: 24rpx;
  border: 1rpx solid #ccc;
}

.goods-info .img-box .img {
  width: 160rpx;
  height: 160rpx;
}

.pay_box {
  margin-top: 104rpx;
  padding: 0 22rpx;
}
.dk-jf {
  text-align: right;
  color: #666;
}
</style>
